{
  "pipeline_name" : "l_dynamic_period",
  "target_table" : "l_dynamic_period",
  "event_log_table_name" : "orx_idw_dm_etl_prd_ht2.event_log",
  "sk_lock_file_path" : "dbfs:/mnt/datalake/idwht2devrawsa/raw/ht2_locks",
  "load_ready_update_path" : "dbfs:/mnt/datalake/idwht2datadevidlsa/enhanced/ht2_outbound/load_ready",
  "load_ready_insert_path" : "dbfs:/mnt/datalake/idwht2datadevidlsa/enhanced/ht2_outbound/load_ready",
  "audit_summary" : "orx_idw_dm_etl_prd_ht2.audit_summary",
  "survivorship_flag" : false,
  "source_table" : "d_date",
  "trigger_file_content_data_mart_prefix" : "ht2",
  "single_load_ready_path" : "dbfs:/mnt/datalake/idwht2datadevidlsa/enhanced/ht2_outbound/single_loadready",
  "sk_service_self_join" : "false",
  "incremental_load_metadata_table" : "orx_idw_dm_etl_prd_ht2.incremental_load_metadata_table",
  "data_mart" : "HT2",
  "disable_dedup_rules" : "true",
  "read_incremental_files_flag" : "false",
  "uid" : "APP_ABI_ORCA_HT2_PRD",
  "target_table_db" : "orx_idw_dm_prd",
  "reformat_rules" : "{\r\n\"dynamic_perd_sk\":\"dynamic_perd_sk\",\r\n\"perd_type_nbr\":\"perd_type_nbr\",\r\n\"perd_type_nm\":\"perd_type_nm\",\r\n\"perd_start_dt_sk\":\"perd_start_dt_sk\",\r\n\"perd_start_dt\":\"perd_start_dt\",\r\n\"perd_end_dt\":\"perd_end_dt\",\r\n\"perd_order_no\":\"perd_order_no\",\r\n\"perd_order_nm\":\"perd_order_nm\",\r\n\"src_env_sk\":\"src_env_sk\",\r\n\"rec_stat_cd\":\"rec_stat_cd\"\r\n}",
  "temp_output_flag" : "true",
  "final_table_schema" : "{\r\n\r\n  \"dynamic_perd_sk\": \"bigint\",\r\n  \"perd_type_nbr\": \"int\",\r\n  \"perd_type_nm\": \"string\",\r\n  \"perd_start_dt_sk\": \"bigint\",\r\n  \"perd_start_dt\": \"date\",\r\n  \"perd_end_dt\": \"date\",\r\n  \"perd_order_no\": \"int\",\r\n  \"perd_order_nm\": \"string\",\r\n  \"src_env_sk\": \"bigint\",\r\n  \"insert_ts\": \"timestamp\",\r\n  \"insert_uid\": \"string\",\r\n  \"run_id\": \"bigint\",\r\n  \"update_ts\": \"timestamp\",\r\n  \"update_uid\": \"string\",\r\n  \"rec_stat_cd\": \"smallint\"\r\n}\r\n",
  "source_path" : "srcs = [{\r\n       \"fmt\" : \"query\",\r\n       \"src\" :\"SELECT abs(crc32(1||dt_sk)) AS dynamic_perd_sk,  1 perd_type_nbr,  'Month' perd_type_nm,  dt_sk perd_start_dt_sk,  cal_day_dt perd_start_dt,  LAST_DAY(cal_day_dt) perd_end_dt,  0 perd_order_no, CASE WHEN perd_order_no = 0 THEN 'Current' else 'Previous ' || perd_order_no END perd_order_nm,  src_env_sk,  1 as rec_stat_cd FROM orx_idw_dm_ht2_prd.D_DATE WHERE cal_month_start_flg = 'Y' AND cal_day_dt between add_months(date_add(curdate(),-(extract(day  from curdate() )-1) ) , -(abs(extract(year from curdate())-2010)*12 + abs(extract(month from curdate())-1)) ) and date_add(curdate(),-(extract(day  from curdate() ) ) ) union SELECT abs(crc32(2||dt_sk )) AS dynamic_perd_sk, 2 perd_type_nbr,  'Quarter' perd_type_nm,  dt_sk perd_start_dt_sk,   cal_day_dt perd_start_dt,  last_day(add_months( to_date(cal_day_dt,'yyyymmdd'),2)) perd_end_dt,  RANK() OVER (ORDER BY dt_sk DESC) -1 perd_order_no,  extract(YEAR from to_date(cal_day_dt,'yyyymmdd')) || ' Q' || EXTRACT(Quarter FROM cal_day_dt) perd_order_nm,  src_env_sk,  1 as rec_stat_cd  FROM orx_idw_dm_ht2_prd.D_DATE WHERE cal_qtr_start_flg = 'Y' AND cal_day_dt   between add_months(last_day(add_months(date_trunc('MONTH',current_date),CASE WHEN extract(MONTH FROM cast(date_trunc('MONTH',current_date) as date)) IN (1,4,7,10) THEN -1 ELSE -4 END))+1,-(ABS(extract(year from curdate())-2010)*12 + abs(extract(month from curdate())-1))) AND LAST_DAY(ADD_MONTHS(date_trunc('MONTH',current_date),CASE WHEN EXTRACT(MONTH FROM cast(date_trunc('MONTH',current_date) as date)) IN (1,4,7,10) THEN -1 ELSE -4 END)) union SELECT abs(crc32(3||dt_sk )) AS dynamic_perd_sk, 3 perd_type_nbr, 'Year to Date' perd_type_nm,  dt_sk perd_start_dt_sk,  cal_day_dt perd_start_dt, date_add(add_months(  to_date(cal_day_dt,'yyyymmdd') ,-(extract(month from  to_date(cal_day_dt,'yyyymmdd') )-1)),-(extract(day from  to_date(cal_day_dt,'yyyymmdd') )-1)) perd_end_dt, RANK() OVER (ORDER BY dt_sk DESC) -1 perd_order_no,  CASE WHEN perd_order_no = 0 THEN 'Current' else 'Previous ' || perd_order_no END perd_order_nm,  src_env_sk, 1 as rec_stat_cd FROM orx_idw_dm_ht2_prd.d_date   WHERE cal_month_start_flg = 'Y' AND cal_day_dt  between add_months(last_day(add_months(date_trunc('MONTH',current_date),-1))+1,-(abs(extract(year from curdate())-2010)*12 + abs(extract(month from curdate())-1)))  AND LAST_DAY(ADD_MONTHS(date_trunc('MONTH',current_date),-1))  union  SELECT abs(crc32(4||dt_sk )) AS dynamic_perd_sk,  4 perd_type_nbr,  '12 Month Rolling' perd_type_nm,  dt_sk perd_start_dt_sk, cal_day_dt perd_start_dt,  add_months(cal_day_dt,-11) perd_end_dt,  RANK() OVER (ORDER BY dt_sk DESC) -1 perd_order_no,  CASE WHEN perd_order_no = 0 THEN 'Current' else 'Previous ' || perd_order_no END perd_order_nm,  src_env_sk,  1 as rec_stat_cd FROM ORX_IDW_DM_ht2_prd.d_date where cal_month_start_flg = 'Y' and cal_day_dt  between add_months(last_day(add_months(date_trunc('MONTH',current_date),-1))+1,-(abs(extract(year from curdate())-2010)*12 + abs(extract(month from curdate())-1)))  and last_day(add_months(date_trunc('MONTH',current_date),-1))\"\r\n       }]",
  "primary_key" : "perd_type_nbr,perd_start_dt_sk,run_id",
  "survivorship_lookup_column" : "None"
}