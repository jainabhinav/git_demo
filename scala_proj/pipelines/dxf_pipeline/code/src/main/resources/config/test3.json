{
  "incremental_query_replace_strategy" : "query_replace",
  "pipeline_name" : "f_cpn_adj_claim_transaction",
  "target_table" : "f_cpn_adj_claim_transaction",
  "optional_sk_config" : "sks = [\n  {\n    \"table-name\": \"d_pharmacy\",\n    \"sk-col\": \"phr_sk\",\n    \"nk-col\": [\n      \"srvprovid\"\n    ]\n  },\n  {\n    \"table-name\": \"d_plan\",\n    \"sk-col\": \"final_pln_sk\",\n    \"nk-col\": [\n      \"fnlplancde\",\n      \"CASE WHEN coalesce((array_contains(array(6, 7), length(CAST(fnlplandte AS DECIMAL(10,0)))) AND ((NOT (CASE WHEN (length(trim(CAST((19000000 + CAST(fnlplandte AS DECIMAL(10,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(fnlplandte AS DECIMAL(10,0))) AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST((19000000 + CAST(fnlplandte AS DECIMAL(10,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(fnlplandte AS DECIMAL(10,0))) AS STRING)), 'yyyyMMdd') END WHEN coalesce(((length(CAST(fnlplandte AS DECIMAL(10,0))) = 8) AND ((NOT (CASE WHEN (length(trim(CAST(fnlplandte AS STRING))) = 8) THEN to_date(trim(CAST(fnlplandte AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST(fnlplandte AS STRING))) = 8) THEN to_date(trim(CAST(fnlplandte AS STRING)), 'yyyyMMdd') END ELSE CASE WHEN (length(trim(CAST('19000101' AS STRING))) = 8) THEN to_date(trim(CAST('19000101' AS STRING)), 'yyyyMMdd') END END\",\n      \"CAST(src_env_sk AS DECIMAL(38,0))\"\n    ]\n  },\n  {\n    \"table-name\": \"d_product\",\n    \"sk-col\": \"prod_sk\",\n    \"nk-col\": [\n      \"CASE WHEN array_contains(array('2', '9'), trim(compoundcd)) THEN '-' ELSE productid END\",\n      \"CASE WHEN array_contains(array('2', '9'), trim(compoundcd)) THEN '-' ELSE prodtypcde END\"\n    ]\n  },\n  {\n    \"table-name\": \"d_carrier\",\n    \"sk-col\": \"carrier_sk\",\n    \"nk-col\": [\n      \"carrierid\"\n    ]\n  },\n  {\n    \"table-name\": \"d_carrier_acct\",\n    \"sk-col\": \"carrier_acct_sk\",\n    \"nk-col\": [\n      \"carrierid\",\n      \"accountid\"\n    ]\n  },\n  {\n    \"table-name\": \"d_cag\",\n    \"sk-col\": \"cag_sk\",\n    \"nk-col\": [\n      \"carrierid\",\n      \"accountid\",\n      \"CASE WHEN ((NOT (trim(claimsts) = 'R')) AND (trim(groupid) = '')) THEN groupnbr ELSE groupid END\"\n    ]\n  },\n  {\n    \"table-name\": \"d_member\",\n    \"sk-col\": \"mbr_sk\",\n    \"nk-col\": [\n      \"carrierid\",\n      \"accountid\",\n      \"CASE WHEN ((NOT (trim(claimsts) = 'R')) AND (trim(groupid) = '')) THEN groupnbr ELSE groupid END\",\n      \"memberid\"\n    ]\n  }\n]",
  "source_table" : "RCRXCP",
  "optional_filter_rules" : "((NOT (carrierid IS NULL)) AND (((NOT CAST(string_like(CAST(upper(carrierid) AS STRING), '%TEST%') AS BOOLEAN)) AND (NOT CAST(string_like(CAST(upper(carrierid) AS STRING), '%TST%') AS BOOLEAN))) AND (array_contains(array('T', 'M', 'B', 'R', 'A', 'I', 'J'), upper(clmorigin)) AND (((NOT array_contains(array('1718634', '0556540', '1497704431', '1669498515'), sbmsrvprid)) AND (NOT array_contains(array('1718634', '0556540', '1497704431', '1669498515'), srvprovid))) OR (CAST(rxnumber AS DOUBLE) >= 10000))))) OR (carrierid IS NULL)",
  "reformat_rules_join" : "joins = [\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_carrier\",\n    \"join-cond\": \"in1.carrier_id = in0.carrierid\",\n    \"val-cols\": [\n      \"in1.carrier_sk as in1_carrier_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_cag\",\n    \"join-cond\": \"in1.carrier_id = in0.carrierid AND in1.account_id = in0.accountid AND in1.employer_group_id = CASE WHEN ((NOT (trim(in0.claimsts) = 'R')) AND (trim(in0.groupid) = '')) THEN in0.groupnbr ELSE in0.groupid END\",\n    \"val-cols\": [\n      \"in1.cag_sk as in1_cag_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_carrier_acct\",\n    \"join-cond\": \"in1.carrier_id = in0.carrierid AND in1.account_id = in0.accountid\",\n    \"val-cols\": [\n      \"in1.carrier_acct_sk as in1_carrier_acct_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_date\",\n    \"join-cond\": \"in1.cal_day_dt = CASE WHEN coalesce((array_contains(array(6, 7), length(CAST(in0.dtefilled AS DECIMAL(10,0)))) AND ((NOT (CASE WHEN (length(trim(CAST((19000000 + CAST(in0.dtefilled AS DECIMAL(10,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(in0.dtefilled AS DECIMAL(10,0))) AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST((19000000 + CAST(in0.dtefilled AS DECIMAL(10,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(in0.dtefilled AS DECIMAL(10,0))) AS STRING)), 'yyyyMMdd') END WHEN coalesce(((length(CAST(in0.dtefilled AS DECIMAL(10,0))) = 8) AND ((NOT (CASE WHEN (length(trim(CAST(in0.dtefilled AS STRING))) = 8) THEN to_date(trim(CAST(in0.dtefilled AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST(in0.dtefilled AS STRING))) = 8) THEN to_date(trim(CAST(in0.dtefilled AS STRING)), 'yyyyMMdd') END ELSE CASE WHEN (length(trim(CAST('19000101' AS STRING))) = 8) THEN to_date(trim(CAST('19000101' AS STRING)), 'yyyyMMdd') END END\",\n    \"val-cols\": [\n      \"in1.dt_sk as in1_filled_dt_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_member\",\n    \"join-cond\": \"in1.carrier_id = in0.carrierid AND in1.account_id = in0.accountid AND in1.employer_group_id = CASE WHEN ((NOT (trim(in0.claimsts) = 'R')) AND (trim(in0.groupid) = '')) THEN in0.groupnbr ELSE in0.groupid END AND in1.mbr_id = in0.memberid\",\n    \"val-cols\": [\n      \"in1.mbr_sk as in1_mbr_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_pharmacy\",\n    \"join-cond\": \"in1.phr_id = in0.srvprovid\",\n    \"val-cols\": [\n      \"in1.phr_sk as in1_phr_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_plan\",\n    \"join-cond\": \"in1.pln_cd = in0.fnlplancde AND in1.pln_eff_dt = CASE WHEN coalesce((array_contains(array(6, 7), length(CAST(in0.fnlplandte AS DECIMAL(9,0)))) AND ((NOT (CASE WHEN (length(trim(CAST((19000000 + CAST(in0.fnlplandte AS DECIMAL(9,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(in0.fnlplandte AS DECIMAL(9,0))) AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST((19000000 + CAST(in0.fnlplandte AS DECIMAL(9,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(in0.fnlplandte AS DECIMAL(9,0))) AS STRING)), 'yyyyMMdd') END WHEN coalesce(((length(CAST(in0.fnlplandte AS DECIMAL(9,0))) = 8) AND ((NOT (CASE WHEN (length(trim(CAST(in0.fnlplandte AS STRING))) = 8) THEN to_date(trim(CAST(in0.fnlplandte AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST(in0.fnlplandte AS STRING))) = 8) THEN  to_date(trim(CAST(in0.fnlplandte AS STRING)), 'yyyyMMdd') END ELSE CASE WHEN (length(trim(CAST('19000101' AS STRING))) = 8) THEN to_date(trim(CAST('19000101' AS STRING)), 'yyyyMMdd') END END AND in1.src_env_sk = CAST(in0.src_env_sk AS DECIMAL(38,0))\",\n    \"val-cols\": [\n      \"in1.pln_sk as in1_final_pln_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_product\",\n    \"join-cond\": \"in1.prod_id = CASE WHEN array_contains(array('2', '9'), trim(in0.compoundcd)) THEN '-' ELSE in0.productid END AND in1.prod_id_qlfr_cd = CASE WHEN array_contains(array('2', '9'), trim(in0.compoundcd)) THEN '-' ELSE in0.prodtypcde END\",\n    \"val-cols\": [\n      \"in1.prod_sk as in1_prod_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"orx_idw_dm_prd.d_date\",\n    \"join-cond\": \"in1.cal_day_dt = CASE WHEN coalesce((array_contains(array(6, 7), length(CAST(in0.rxbmdt AS DECIMAL(9,0)))) AND ((NOT (CASE WHEN (length(trim(CAST((19000000 + CAST(in0.rxbmdt AS DECIMAL(9,0))) AS STRING))) = 8) THEN date_format(to_date(trim(CAST((19000000 + CAST(in0.rxbmdt AS DECIMAL(9,0))) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST((19000000 + CAST(in0.rxbmdt AS DECIMAL(9,0))) AS STRING))) = 8) THEN date_format(to_date(trim(CAST((19000000 + CAST(in0.rxbmdt AS DECIMAL(9,0))) AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END WHEN coalesce(((length(CAST(in0.rxbmdt AS DECIMAL(9,0))) = 8) AND ((NOT (CASE WHEN (length(trim(CAST(in0.rxbmdt AS STRING))) = 8) THEN date_format(to_date(trim(CAST(in0.rxbmdt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST(in0.rxbmdt AS STRING))) = 8) THEN date_format(to_date(trim(CAST(in0.rxbmdt AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END ELSE CASE WHEN (length(trim(CAST('19000101' AS STRING))) = 8) THEN date_format(to_date(trim(CAST('19000101' AS STRING)), 'yyyyMMdd'), 'yyyy-MM-dd') END END\",\n    \"val-cols\": [\n      \"in1.dt_sk as in1_sbm_dt_sk\"\n    ]\n  },\n  {\n    \"fmt\": \"table\",\n    \"src\": \"rxclaims.rcexbp\",\n    \"join-cond\": \"in1.instance_name = in0.instance_name AND in1.acp2nb = CAST(in0.rxp2nb AS DECIMAL(17,0)) AND in1.acoinb = CAST(in0.rxoinb AS DECIMAL(5,0)) AND in1.acs6st = in0.claimsts AND in1.src_env_sk = in0.src_env_sk\",\n    \"val-cols\": [\n      \"in1.acp2nb AS acp2nb0\",\n      \"in1.actequ AS actequ0\"\n    ]\n  }\n]",
  "incremental_table_watermark_col" : "a.UPDATE_TIMESTAMP",
  "target_table_db" : "orx_idw_dm_prd",
  "reformat_rules" : "{\r\n  \"src_stat_id\": \"rxmgat\",\r\n  \"app_adj_copay_amt\": \"rxsdqv\",\r\n  \"cag_sk\": \"in1_cag_sk\",\r\n  \"claim_stat_id\": \"claimsts\",\r\n  \"days_sply\": \"CAST(dayssupply AS DECIMAL(38,0))\",\r\n  \"rbl_adj_atr_sls_tax_amt\": \"rxsrqv\",\r\n  \"claim_nbr_encrp\": \"CAST(CASE WHEN (CAST(rxp2nb AS DECIMAL(17,0)) > 0) THEN CAST(concat(substring(CAST(rxp2nb AS STRING), 1, 2), ff3_encrypt_idwdata(CAST(CAST(rxp2nb AS STRING) AS STRING))) AS STRING) ELSE ff3_encrypt_idwdata(rxp2nb) END AS DECIMAL(38,0))\",\r\n  \"oth_pyr_3rd_amt\": \"rxsvqv\",\r\n  \"app_adj_atr_prd_slct_amt\": \"rxsiqv\",\r\n  \"claim_nbr\": \"CAST(rxp2nb AS DECIMAL(38,0))\",\r\n  \"drg_qty\": \"decimalqty\",\r\n  \"oth_pyr_2nd_amt\": \"rxsuqv\",\r\n  \"cpn_pat_pay_gpi_list\": \"rxpzvi\",\r\n  \"claim_seq_nbr\": \"CAST(CASE WHEN (CAST(rxoinb AS DECIMAL(5,0)) < 0) THEN CAST(rxoinb AS DECIMAL(5,0)) ELSE (1000 - CAST(rxoinb AS DECIMAL(5,0))) END AS DECIMAL(38,0))\",\r\n  \"prod_sk\": \"in1_prod_sk\",\r\n  \"final_pln_sk\": \"in1_final_pln_sk\",\r\n  \"mbr_sk\": \"in1_mbr_sk\",\r\n  \"src_seq_nbr\": \"CAST(rxdbaq AS DECIMAL(38,0))\",\r\n  \"app_patient_pay_amt\": \"phrpatpay\",\r\n  \"sbm_dt\": \"CASE WHEN coalesce((array_contains(array(6, 7), length(CAST(rxbmdt AS DECIMAL(9,0)))) AND ((NOT (CASE WHEN (length(trim(CAST((19000000 + CAST(rxbmdt AS DECIMAL(9,0))) AS STRING))) = 8) THEN date_format(to_date(trim(CAST((19000000 + CAST(rxbmdt AS DECIMAL(9,0))) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST((19000000 + CAST(rxbmdt AS DECIMAL(9,0))) AS STRING))) = 8) THEN date_format(to_date(trim(CAST((19000000 + CAST(rxbmdt AS DECIMAL(9,0))) AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END WHEN coalesce(((length(CAST(rxbmdt AS DECIMAL(9,0))) = 8) AND ((NOT (CASE WHEN (length(trim(CAST(rxbmdt AS STRING))) = 8) THEN date_format(to_date(trim(CAST(rxbmdt AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST(rxbmdt AS STRING))) = 8) THEN date_format(to_date(trim(CAST(rxbmdt AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END ELSE CASE WHEN (length(trim(CAST('19000101' AS STRING))) = 8) THEN date_format(to_date(trim(CAST('19000101' AS STRING)), 'yyyyMMdd'), 'yyyyMMdd') END END\",\r\n  \"app_due_amt\": \"phrdueamt\",\r\n  \"unusd_cpn_amt\": \"NULL\",\r\n  \"carrier_sk\": \"in1_carrier_sk\",\r\n  \"carrier_acct_sk\": \"in1_carrier_acct_sk\",\r\n  \"rbl_adj_copay_amt\": \"rxslqv\",\r\n  \"rbl_adj_atr_prd_slct_amt\": \"rxsqqv\",\r\n  \"app_adj_ded_amt\": \"rxsgqv\",\r\n  \"filled_dt\": \"CASE WHEN coalesce((array_contains(array(6, 7), length(CAST(dtefilled AS DECIMAL(10,0)))) AND ((NOT (CASE WHEN (length(trim(CAST((19000000 + CAST(dtefilled AS DECIMAL(10,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(dtefilled AS DECIMAL(10,0))) AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST((19000000 + CAST(dtefilled AS DECIMAL(10,0))) AS STRING))) = 8) THEN to_date(trim(CAST((19000000 + CAST(dtefilled AS DECIMAL(10,0))) AS STRING)), 'yyyyMMdd') END WHEN coalesce(((length(CAST(dtefilled AS DECIMAL(10,0))) = 8) AND ((NOT (CASE WHEN (length(trim(CAST(dtefilled AS STRING))) = 8) THEN to_date(trim(CAST(dtefilled AS STRING)), 'yyyyMMdd') END IS NULL)) = 1)), CAST(0 AS BOOLEAN)) THEN CASE WHEN (length(trim(CAST(dtefilled AS STRING))) = 8) THEN to_date(trim(CAST(dtefilled AS STRING)), 'yyyyMMdd') END ELSE CASE WHEN (length(trim(CAST('19000101' AS STRING))) = 8) THEN to_date(trim(CAST('19000101' AS STRING)), 'yyyyMMdd') END END\",\r\n  \"reversal_ind\": \"CASE WHEN coalesce((claimsts = 'X'), CAST(0 AS BOOLEAN)) THEN 'Y' WHEN coalesce((claimsts = 'R'), CAST(0 AS BOOLEAN)) THEN 'N' WHEN coalesce((claimsts = 'Z'), CAST(0 AS BOOLEAN)) THEN 'Y' ELSE 'N' END\",\r\n  \"account_id\": \"accountid\",\r\n  \"clt_due_amt\": \"CASE WHEN (NOT (acp2nb0 IS NULL)) THEN actequ0 ELSE CAST(cltdueamt AS DECIMAL(11,2)) END\",\r\n  \"btch_ld_cpn_ind\": \"rxg0aw\",\r\n  \"rbl_adj_pat_pay_amt\": \"rxssqv\",\r\n  \"filled_dt_sk\": \"in1_filled_dt_sk\",\r\n  \"app_adj_atr_over_cap_amt\": \"rxshqv\",\r\n  \"cpn_not_appld_amt\": \"rxstqv\",\r\n  \"rbl_adj_prcnt_copay_amt\": \"rxsnqv\",\r\n  \"carrier_id\": \"carrierid\",\r\n  \"rbl_adj_atr_over_cap_amt\": \"rxspqv\",\r\n  \"app_adj_atr_sls_tax_amt\": \"rxsjqv\",\r\n  \"phr_sk\": \"in1_phr_sk\",\r\n  \"oth_pyr_na_ind\": \"rxsaau\",\r\n  \"sbm_dt_sk\": \"in1_sbm_dt_sk\",\r\n  \"app_adj_prcnt_copay_amt\": \"rxsfqv\",\r\n  \"oop_applied_amt\": \"cctresrv11\",\r\n  \"clt_patient_pay_amt\": \"cltpatpay\",\r\n  \"employer_group_id\": \"groupid\",\r\n  \"member_id\": \"memberid\",\r\n  \"rbl_adj_ded_amt\": \"rxsoqv\",\r\n  \"rbl_adj_flat_copay_amt\": \"rxsmqv\",\r\n  \"app_adj_flat_copay_amt\": \"rxseqv\",\r\n  \"src_env_sk\": \"CAST(src_env_sk AS DECIMAL(38,0))\",\r\n  \"app_adj_pat_pay_amt\": \"rxskqv\",\r\n  \"claim_cntr\": \"CAST(CASE WHEN array_contains(array('P', 'C'), trim(claimsts)) THEN 1 WHEN array_contains(array('X', 'Z'), trim(claimsts)) THEN -1 ELSE 0 END AS DECIMAL(38,0))\",\r\n  \"accountid\": \"accountid\",\r\n  \"memberid\": \"memberid\",\r\n  \"carrierid\": \"carrierid\",\r\n  \"groupid\": \"groupid\",\r\n  \"fnlplancde\": \"fnlplancde\",\r\n  \"srvprovid\": \"srvprovid\",\r\n  \"dtefilled\": \"dtefilled\",\r\n  \"fnlplandte\": \"fnlplandte\",\r\n  \"rxbmdt\": \"rxbmdt\",\r\n  \"claimsts\": \"claimsts\",\r\n  \"groupnbr\": \"groupnbr\",\r\n  \"compoundcd\": \"compoundcd\",\r\n  \"productid\": \"productid\",\r\n  \"prodtypcde\": \"prodtypcde\",\r\n  \"sbm_cpn_typ\": \"AMIZCJ\",\r\n  \"sbm_cpn_no\": \"amr1c4\",\r\n  \"sbm_cpn_value\": \"amugp1\"\r\n}\r\n\r\n\r\n",
  "final_table_schema" : "{\"claim_nbr\": \"long\",\n\"claim_seq_nbr\": \"int\",\n\"claim_stat_id\": \"string\",\n\"cag_sk\": \"long\",\n\"carrier_id\": \"string\",\n\"account_id\": \"string\",\n\"employer_group_id\": \"string\",\n\"member_id\": \"string\",\n\"mbr_sk\": \"long\",\n\"phr_sk\": \"long\",\n\"prod_sk\": \"long\",\n\"sbm_dt\": \"date\",\n\"sbm_dt_sk\": \"long\",\n\"filled_dt\": \"date\",\n\"filled_dt_sk\": \"long\",\n\"final_pln_sk\": \"long\",\n\"days_sply\": \"int\",\n\"claim_cntr\": \"short\",\n\"drg_qty\": \"decimal(11, 3)\",\n\"app_due_amt\": \"decimal(9, 2)\",\n\"app_patient_pay_amt\": \"decimal(9, 2)\",\n\"clt_due_amt\": \"decimal(9, 2)\",\n\"clt_patient_pay_amt\": \"decimal(9, 2)\",\n\"oop_applied_amt\": \"decimal(9, 2)\",\n\"app_adj_copay_amt\": \"decimal(9, 2)\",\n\"app_adj_flat_copay_amt\": \"decimal(9, 2)\",\n\"app_adj_prcnt_copay_amt\": \"decimal(9, 2)\",\n\"app_adj_ded_amt\": \"decimal(9, 2)\",\n\"app_adj_atr_over_cap_amt\": \"decimal(9, 2)\",\n\"app_adj_atr_prd_slct_amt\": \"decimal(9, 2)\",\n\"app_adj_atr_sls_tax_amt\": \"decimal(9, 2)\",\n\"app_adj_pat_pay_amt\": \"decimal(9, 2)\",\n\"rbl_adj_copay_amt\": \"decimal(9, 2)\",\n\"rbl_adj_flat_copay_amt\": \"decimal(9, 2)\",\n\"rbl_adj_prcnt_copay_amt\": \"decimal(9, 2)\",\n\"rbl_adj_ded_amt\": \"decimal(9, 2)\",\n\"rbl_adj_atr_over_cap_amt\": \"decimal(9, 2)\",\n\"rbl_adj_atr_prd_slct_amt\": \"decimal(9, 2)\",\n\"rbl_adj_atr_sls_tax_amt\": \"decimal(9, 2)\",\n\"rbl_adj_pat_pay_amt\": \"decimal(9, 2)\",\n\"cpn_not_appld_amt\": \"decimal(9, 2)\",\n\"oth_pyr_2nd_amt\": \"decimal(9, 2)\",\n\"oth_pyr_3rd_amt\": \"decimal(9, 2)\",\n\"oth_pyr_na_ind\": \"string\",\n\"reversal_ind\": \"string\",\n\"src_env_sk\": \"long\",\n\"cpn_pat_pay_gpi_list\": \"string\",\n\"btch_ld_cpn_ind\": \"string\",\n\"unusd_cpn_amt\": \"decimal(9, 2)\",\n\"src_stat_id\": \"string\",\n\"src_seq_nbr\": \"int\",\n\"carrier_sk\": \"long\",\n\"claim_nbr_encrp\": \"long\",\n\"rec_stat_cd\": \"short\",\n\"run_id\": \"long\",\n\"update_uid\": \"string\",\n\"update_ts\": \"timestamp\",\n\"insert_uid\": \"string\",\n\"insert_ts\": \"timestamp\",\n\"sbm_cpn_typ\": \"string\",\n\"sbm_cpn_no\": \"string\",\n\"sbm_cpn_value\": \"decimal(9, 2)\"}",
  "optional_filter_rules_join" : "joins = []",
  "source_path" : "srcs = [\n  {\n    \"fmt\": \"query\",\n    \"src\": \"select a.rxp2nb, a.rxoinb, b.claimsts, b.carrierid, b.accountid, b.groupid, b.groupnbr, b.memberid, b.srvprovid, b.sbmsrvprid, a.rxbmdt, b.dtefilled, b.dayssupply, b.decimalqty, b.phrdueamt, b.phrpatpay, b.cltdueamt, b.cltpatpay, b.cctresrv11, b.fnlplandte, b.fnlplancde, b.compoundcd, b.productid, b.prodtypcde, b.clmorigin, b.rxnumber, a.rxsdqv, a.rxseqv, a.rxsfqv, a.rxsgqv, a.rxshqv, a.rxsiqv, a.rxsjqv, a.rxskqv, a.rxslqv, a.rxsmqv, a.rxsnqv, a.rxsoqv, a.rxspqv, a.rxsqqv, a.rxsrqv, a.rxssqv, a.rxstqv, a.rxsuqv, a.rxsvqv, a.rxg0aw, a.rxpzvi, a.rxmgat, a.rxdbaq, a.rxsaau, a.src_env_sk,a.INSTANCE_NAME,c.amizcj, c.amr1c4, c.amugp1 from rxclaims.rcrxcp as a inner join (Select * from rxclaims.rcex1p where year(UPDATE_TIMESTAMP) in (year(##START_TS##),(year(##START_TS##)-1))) b on a.INSTANCE_NAME = b.INSTANCE_NAME AND a.rxp2nb=b.rxclaimnbr and a.rxoinb=b.clmseqnbr inner join rxclaims.rccpsp c on b.INSTANCE_NAME=c.INSTANCE_NAME and b.rxclaimnbr=c.amp2nb and b.clmseqnbr=c.amoinb and a.UPDATE_TIMESTAMP > ##START_TS## AND a.UPDATE_TIMESTAMP <= ##END_TS## limit 100\"\n  }\n]",
  "default_source_blank_nulls" : "carrierid, accountid, groupid, groupnbr"
}