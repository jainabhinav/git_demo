{"initCode":"  def encryptMemberId(memberId: String): String = {\r\n    val src: Array[Char] = Array.fill(20)('^')\r\n    var (oddSum, evenSum, totSum) = (0, 0, 0)\r\n\r\n    for (i <- 0 until math.min(memberId.length, 18)) {\r\n      src(i) = if (memberId.charAt(i) == ' ') '^' else memberId.charAt(i)\r\n      if (Character.isDigit(src(i))) {\r\n        if (i % 2 == 0)\r\n          evenSum += Character.getNumericValue(src(i))\r\n        else\r\n          oddSum += Character.getNumericValue(src(i))\r\n      }\r\n    }\r\n\r\n    totSum = (evenSum % 10 + oddSum % 10) % 10\r\n    for (i <- 0 until math.min(memberId.length, 18)) {\r\n      if (Character.isDigit(src(i))) {\r\n        src(i) = (48 + ((totSum + Character.getNumericValue(src(i))) % 10)).toChar\r\n      }\r\n    }\r\n\r\n    Seq(\r\n      src(13), src(12), src(15), src(14), src(17), src(16), src(1), src(0), src(3),\r\n      src(2), src(5), src(4), src(7), src(6), src(9), src(8), src(11), src(10)\r\n    ).mkString.replace(\"^\", \"\").trim()\r\n  }","code":"udf(encryptMemberId _)"}