{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1"
    },
    "codeGenConfiguration" : {
      "editableConfig" : true,
      "plibVersion" : {
        "mavenVersion" : "8.0.11"
      }
    },
    "id" : "1",
    "uri" : "pipelines/DQ_bug_test",
    "pipelineSettingsInfo" : {
      "applicationName" : "DQ_bug_test",
      "hasApplication" : true,
      "isFunctionsPackageDirDefined" : true
    },
    "language" : "scala",
    "fabricId" : "2453",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "abhinavprophecyioteam.scalamigtestinggit.functions",
      "sharedFunctionPackageNames" : [ "io.prophecy.scalagems.functions", "io.prophecy.warehousegems.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "39",
      "projectName" : "ProphecySparkBasicsScala",
      "externalDependencies" : [ ]
    }, {
      "projectUID" : "40",
      "projectName" : "ProphecyWarehouseScala",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.dq_bug_test",
    "configurationVersion" : "v2"
  },
  "connections" : [ {
    "id" : "9ULH06g0LGyiJPbOH2M-W$$pSUcsg8BLrm2QmYEnYinJ",
    "source" : "N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD",
    "sourcePort" : "byEYs5c0OrAYpwSny8kYB$$1gvHKQcyDzX7gkTOyAqlA",
    "target" : "TEaVU6sVGIfq7qvoK33pK$$IX4nX1AZ9dqZVZBcBSZeG",
    "targetPort" : "-x78MhvLNNoN7b4Ydgyk4$$zyHQEIqug5V-0rnNs4c2n"
  }, {
    "id" : "FNHorx--UTSF7yALEXQrc$$juZIUR64NfDjy1KMseALB",
    "source" : "qP7vxrnzJhiiEYN7RLroo$$sIX5bvBMTsuh6pRJF44GE",
    "sourcePort" : "NHRNnYDVMv1J7t3EbsVAP$$4q6Lwh5TK4Jirrr2tdS-T",
    "target" : "qaoBq15NKg1MBBc56AsNn$$Oyxr_Z423Y29ctTiBvX9B",
    "targetPort" : "Cn6nV28Z_gXARg5j2sIuG$$UmqUWnUPdpFnmYc4ms4Lw"
  }, {
    "id" : "6VI2Ej1dpzpL99MSz7HiB$$y7P88r3iERYfP70KlmUlJ",
    "source" : "qaoBq15NKg1MBBc56AsNn$$Oyxr_Z423Y29ctTiBvX9B",
    "sourcePort" : "OrcHa9bm-l6bPTQbGlXi2$$Wmx3cFie_jojRuJOUPqLB",
    "target" : "xtM04QhrlCWHRJnAOnWQC$$9CKp8J3b_Utq6EQYz5b6E",
    "targetPort" : "YnY-IrBDt-EZPz6bNUBjS$$rEe3LYjjOKTQehubgQcbM"
  }, {
    "id" : "bU_5wuH_huVTk7sxEgJOt",
    "source" : "xtM04QhrlCWHRJnAOnWQC$$9CKp8J3b_Utq6EQYz5b6E",
    "sourcePort" : "UjRz6dnNCaVFzse-iUCDE$$MPLxgmsytfHuq9W1hr8iK",
    "target" : "Uz9br6pI-IL5M_QWAD-7d$$yHfH3lmJ8nRkPyUkNUcZ1",
    "targetPort" : "CKz_AlcK7S5QRnip0_IQe$$nEdKdKK8mgswDnbTgeb8F"
  }, {
    "id" : "WnI79AhNxGnt0BGyipLel",
    "source" : "Uz9br6pI-IL5M_QWAD-7d$$yHfH3lmJ8nRkPyUkNUcZ1",
    "sourcePort" : "CKz_AlcK7S5QRnip0_IQe$$nEdKdKK8mgswDnbTgeb8F_output",
    "target" : "N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD",
    "targetPort" : "T8ng5R7IPvRYTDbVLGAtr"
  } ],
  "processes" : {
    "TEaVU6sVGIfq7qvoK33pK$$IX4nX1AZ9dqZVZBcBSZeG" : {
      "id" : "TEaVU6sVGIfq7qvoK33pK$$IX4nX1AZ9dqZVZBcBSZeG",
      "component" : "Limit",
      "metadata" : {
        "label" : "Limit_1",
        "slug" : "Limit_1",
        "x" : 260,
        "y" : 0,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "-x78MhvLNNoN7b4Ydgyk4$$zyHQEIqug5V-0rnNs4c2n",
          "slug" : "in"
        } ],
        "outputs" : [ {
          "id" : "8jk3q9B5JcZLkDlWByDSI$$R7N1zPCn85wUdsDXa4q1G",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "limit" : "10"
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/9gt3CHHz_team_9/pJIIcs5r_project_39.git&subPath=&tag=0.2.2.dev3&projectSubscriptionProjectId=39&path=gems/Limit",
        "projectName" : "ProphecySparkBasicsScala"
      }
    },
    "N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD" : {
      "id" : "N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_1",
        "slug" : "Join_1",
        "x" : 20,
        "y" : 0,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "Z3gUx8JqATeTfUqvTQb9a$$gG-MCrPb-P1liWUBYo3Lz",
          "slug" : "in0"
        }, {
          "id" : "XqV4A7zJKFQKy3hde_rSq$$OSV6oLAYlKQZdxHggCcSQ",
          "slug" : "in1"
        }, {
          "id" : "T8ng5R7IPvRYTDbVLGAtr",
          "slug" : "in2",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "byEYs5c0OrAYpwSny8kYB$$1gvHKQcyDzX7gkTOyAqlA",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "format" : "sql",
            "expression" : ""
          },
          "joinType" : "inner"
        }, {
          "alias" : "in2",
          "expression" : {
            "format" : "sql",
            "expression" : "(in2.id = in1.id)"
          },
          "joinType" : "inner"
        } ],
        "expressions" : [ ],
        "hints" : [ {
          "id" : "Z3gUx8JqATeTfUqvTQb9a$$gG-MCrPb-P1liWUBYo3Lz",
          "alias" : "in0",
          "hintType" : "none",
          "propagateColumns" : false
        }, {
          "id" : "XqV4A7zJKFQKy3hde_rSq$$OSV6oLAYlKQZdxHggCcSQ",
          "alias" : "in1",
          "hintType" : "none",
          "propagateColumns" : false
        }, {
          "id" : "T8ng5R7IPvRYTDbVLGAtr",
          "alias" : "in2",
          "hintType" : "none",
          "propagateColumns" : false
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ ],
        "headAlias" : "in0"
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/9gt3CHHz_team_9/pJIIcs5r_project_39.git&subPath=&tag=0.2.2.dev3&projectSubscriptionProjectId=39&path=gems/Join",
        "projectName" : "ProphecySparkBasicsScala"
      }
    },
    "qaoBq15NKg1MBBc56AsNn$$Oyxr_Z423Y29ctTiBvX9B" : {
      "id" : "qaoBq15NKg1MBBc56AsNn$$Oyxr_Z423Y29ctTiBvX9B",
      "component" : "Filter",
      "metadata" : {
        "label" : "Filter_1",
        "slug" : "Filter_1",
        "x" : -460,
        "y" : 100,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "Cn6nV28Z_gXARg5j2sIuG$$UmqUWnUPdpFnmYc4ms4Lw",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "OrcHa9bm-l6bPTQbGlXi2$$Wmx3cFie_jojRuJOUPqLB",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "condition" : {
          "format" : "sql",
          "expression" : "true"
        }
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/9gt3CHHz_team_9/pJIIcs5r_project_39.git&subPath=&tag=0.2.2.dev3&projectSubscriptionProjectId=39&path=gems/Filter",
        "projectName" : "ProphecySparkBasicsScala"
      }
    },
    "Uz9br6pI-IL5M_QWAD-7d$$yHfH3lmJ8nRkPyUkNUcZ1" : {
      "id" : "Uz9br6pI-IL5M_QWAD-7d$$yHfH3lmJ8nRkPyUkNUcZ1",
      "component" : "TestAnandDQV",
      "metadata" : {
        "label" : "identity",
        "slug" : "identity",
        "x" : -180,
        "y" : 160,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Returns the input DataFrame unchanged, preserving its original structure.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ {
          "id" : "CKz_AlcK7S5QRnip0_IQe$$nEdKdKK8mgswDnbTgeb8F",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "CKz_AlcK7S5QRnip0_IQe$$nEdKdKK8mgswDnbTgeb8F_output",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : true,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "anomalyRules" : [ ],
        "complianceRules" : [ ],
        "rulesJson" : "{\n  \"entityName\" : \"in\",\n  \"version\" : 2,\n  \"validationRules\" : {\n    \"completeness\" : [ {\n      \"columnName\" : \"customer_id\",\n      \"ruleName\" : \"Completeness Check for customer_id\",\n      \"checkLevel\" : \"Error\",\n      \"priority\" : 0,\n      \"isEnabled\" : true,\n      \"threshold\" : 1\n    } ],\n    \"uniqueness\" : [ ],\n    \"distinctCount\" : [ ],\n    \"compliance\" : [ ],\n    \"dataType\" : [ ],\n    \"anomaly\" : [ ],\n    \"enum\" : [ ],\n    \"range\" : [ ]\n  }\n}",
        "allowedListOfValuesRules" : [ ],
        "uniquenessRules" : [ ],
        "entityName" : "in",
        "distinctCountRules" : [ ],
        "activeTab" : "completenessTab",
        "rangeRules" : [ ],
        "columnsSelector" : [ "CKz_AlcK7S5QRnip0_IQe$$nEdKdKK8mgswDnbTgeb8F##customer_id" ],
        "completenessRules" : [ {
          "ruleName" : "Completeness Check for customer_id",
          "priority" : "0",
          "checkLevel" : "Error",
          "columnName" : "customer_id",
          "threshold" : "1.0",
          "isEnabled" : true
        } ],
        "windowAnomalyRules" : [ ],
        "dataTypeRules" : [ ],
        "ruleSetupSelection" : "table",
        "generateFromTable" : true
      }
    },
    "xtM04QhrlCWHRJnAOnWQC$$9CKp8J3b_Utq6EQYz5b6E" : {
      "id" : "xtM04QhrlCWHRJnAOnWQC$$9CKp8J3b_Utq6EQYz5b6E",
      "component" : "Reformat",
      "metadata" : {
        "label" : "Reformat_1",
        "slug" : "Reformat_1",
        "x" : -360,
        "y" : 120,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "YnY-IrBDt-EZPz6bNUBjS$$rEe3LYjjOKTQehubgQcbM",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : {
                "description" : "",
                "mappings" : [ ],
                "tags" : [ ]
              }
            } ]
          },
          "isStreaming" : false
        } ],
        "outputs" : [ {
          "id" : "UjRz6dnNCaVFzse-iUCDE$$MPLxgmsytfHuq9W1hr8iK",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "columnsSelector" : [ ],
        "expressions" : [ ]
      },
      "componentInfo" : {
        "gemId" : "gitUri=http://gitserver:3000/9gt3CHHz_team_9/pJIIcs5r_project_39.git&subPath=&tag=0.2.2.dev3&projectSubscriptionProjectId=39&path=gems/Reformat",
        "projectName" : "ProphecySparkBasicsScala"
      }
    },
    "qP7vxrnzJhiiEYN7RLroo$$sIX5bvBMTsuh6pRJF44GE" : {
      "id" : "qP7vxrnzJhiiEYN7RLroo$$sIX5bvBMTsuh6pRJF44GE",
      "component" : "Source",
      "metadata" : {
        "label" : "customers",
        "slug" : "customers",
        "x" : -600,
        "y" : -40,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "NHRNnYDVMv1J7t3EbsVAP$$4q6Lwh5TK4Jirrr2tdS-T",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/customers"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  },
  "diagnostics" : [ {
    "property" : "$.workflow.processes.N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Please connect input port in0",
    "tags" : [ ],
    "relatedInformation" : [ ]
  }, {
    "property" : "$.workflow.processes.N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Please connect input port in1",
    "tags" : [ ],
    "relatedInformation" : [ ]
  }, {
    "property" : "$.workflow.processes.N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD.properties.properties.conditions[0].expression.expression",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Expression cannot be empty. [Conditions]",
    "tags" : [ ],
    "relatedInformation" : [ ]
  }, {
    "property" : "$.workflow.processes.N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD.properties.conditions[1].expression.expression",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "No match found for column in2.id [Conditions]",
    "tags" : [ ],
    "relatedInformation" : [ ]
  }, {
    "property" : "$.workflow.processes.N4t2EEb0Z9AKp07FgtubC$$m4tH1JkXrdl0Xh310YujD.properties.conditions[1].expression.expression",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "No match found for column in1.id [Conditions]",
    "tags" : [ ],
    "relatedInformation" : [ ]
  }, {
    "property" : "$.workflow.processes.TEaVU6sVGIfq7qvoK33pK$$IX4nX1AZ9dqZVZBcBSZeG",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 2,
    "message" : "One of the upstream gems is broken. Please, fix it first.",
    "tags" : [ ],
    "relatedInformation" : [ ]
  } ]
}