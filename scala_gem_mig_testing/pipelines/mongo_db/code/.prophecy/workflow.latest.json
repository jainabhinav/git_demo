{
  "metainfo" : {
    "migrationVersions" : {
      "gemBuilderVersion" : "v1"
    },
    "codeGenConfiguration" : {
      "editableConfig" : true,
      "plibVersion" : {
        "mavenVersion" : "8.0.4"
      }
    },
    "id" : "1",
    "uri" : "pipelines/mongo_db",
    "pipelineSettingsInfo" : {
      "applicationName" : "mongo_db",
      "hasApplication" : true,
      "isFunctionsPackageDirDefined" : true
    },
    "language" : "scala",
    "fabricId" : "2453",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ],
      "functionPackageName" : "abhinavprophecyioteam.scalamigtestinggit.functions",
      "sharedFunctionPackageNames" : [ "io.prophecy.scalagems.functions" ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ {
          "name" : "abc",
          "kind" : {
            "type" : "string",
            "value" : "sdfsdg"
          },
          "optional" : false,
          "isWorkflowNodeConfiguration" : false,
          "isReferenced" : false
        } ]
      },
      "oldCommon" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : { },
      "instances" : { },
      "selected" : "default",
      "nonEditable" : [ ],
      "isSubscribedPipelineWithPipelineConfigs" : false
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven",
    "externalDependencies" : [ ],
    "dependentProjectExternalDependencies" : [ {
      "projectUID" : "39",
      "projectName" : "ProphecySparkBasicsScala",
      "externalDependencies" : [ ]
    } ],
    "isImported" : false,
    "interimMode" : "Full",
    "interimModeEnabled" : true,
    "visualCodeInterimMode" : "Disabled",
    "recordsLimit" : {
      "enabled" : false,
      "value" : 1000
    },
    "topLevelPackage" : "io.prophecy.pipelines.mongo_db",
    "configurationVersion" : "v2"
  },
  "connections" : [ {
    "id" : "VF5Pe-c9KVuM4V0jyZ4If$$cnXtYAm_BE5Ot22lQx3VL",
    "source" : "HSa5v4o5Kq9fRAz1k2SEs$$royi8Zlk0a9Xv4-3N-yjy",
    "sourcePort" : "Sx7ECrD1R97aN6-LjMouM$$duDqUnWjTsYldIPYUKptY",
    "target" : "ZgTPyHncKKwL6qLiAOKz_$$kUZWyGTFAPL8rVDhVsW0Y",
    "targetPort" : "_3l2-ARW4sQP8R-zq6AuP$$E3BQEqHt2GnF-Zx2NLBiy"
  } ],
  "processes" : {
    "xVua3Ohhjqs11Q4b6-ad1$$BqQmhtAnyWqKxk13FltL2" : {
      "id" : "xVua3Ohhjqs11Q4b6-ad1$$BqQmhtAnyWqKxk13FltL2",
      "component" : "Source",
      "metadata" : {
        "label" : "mongodb_old_us_ps",
        "slug" : "mongodb_old_us_ps",
        "x" : -1200,
        "y" : -260,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "ZgYXD3TR2YZlNhS4emoce$$x5wEeGGpGBqSMHY4z5X84",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/mongodb_old_us_ps"
      }
    },
    "qJiIX2vF1gTIeh3cwnXqY$$yGziEe3rlnmu4IDMPzxLs" : {
      "id" : "qJiIX2vF1gTIeh3cwnXqY$$yGziEe3rlnmu4IDMPzxLs",
      "component" : "Target",
      "metadata" : {
        "label" : "mongodb_old_db_sec_1",
        "slug" : "mongodb_old_db_sec_1",
        "x" : -1300,
        "y" : -420,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "pQDOrnsMu2HOAGaKrtRyK$$gEHqqfT71wLNIgb-XAdcU",
          "slug" : "in"
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/mongodb_old_db_sec"
      }
    },
    "kQJ35YA8vaWTUvJJ8kAv_$$nHmgAVaJAi5Q9yYOgNzVf" : {
      "id" : "kQJ35YA8vaWTUvJJ8kAv_$$nHmgAVaJAi5Q9yYOgNzVf",
      "component" : "Source",
      "metadata" : {
        "label" : "customers",
        "slug" : "customers",
        "x" : -1460,
        "y" : -640,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "FRoL_iIUdQSyCoapAjYoT$$0775xl7833WoyNYI9vCMG",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/customers"
      }
    },
    "HSa5v4o5Kq9fRAz1k2SEs$$royi8Zlk0a9Xv4-3N-yjy" : {
      "id" : "HSa5v4o5Kq9fRAz1k2SEs$$royi8Zlk0a9Xv4-3N-yjy",
      "component" : "Source",
      "metadata" : {
        "label" : "mongodb_old_config",
        "slug" : "mongodb_old_config",
        "x" : -1140,
        "y" : -620,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "Sx7ECrD1R97aN6-LjMouM$$duDqUnWjTsYldIPYUKptY",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/mongodb_old_config"
      }
    },
    "o2uRfAA3HGff8dTVsV9vc$$sLQFpLBsXsoH_--GeoEc1" : {
      "id" : "o2uRfAA3HGff8dTVsV9vc$$sLQFpLBsXsoH_--GeoEc1",
      "component" : "Target",
      "metadata" : {
        "label" : "mongodb_old_us_ps_1",
        "slug" : "mongodb_old_us_ps_1",
        "x" : -1280,
        "y" : -680,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Writes data from a DataFrame to a MongoDB database and collection.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ {
          "id" : "M6aicw49dkwe-Z_Ln-IAJ$$wcFltIkuMMvbWIQ-nDyng",
          "slug" : "in"
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/mongodb_old_us_ps"
      }
    },
    "Zi0wFu-u0_AetDE1pj980$$spfqdQ3vrV-bO9WMlIMaR" : {
      "id" : "Zi0wFu-u0_AetDE1pj980$$spfqdQ3vrV-bO9WMlIMaR",
      "component" : "Source",
      "metadata" : {
        "label" : "mongodb_old_db_sec",
        "slug" : "mongodb_old_db_sec",
        "x" : -1520,
        "y" : -400,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false,
        "comment" : "Reads data from a MongoDB database with secure credentials, using the provided username and password.",
        "autoUpdateComment" : true
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "zn53J-6tPgf8wN0LowAkM$$gTiLWRnNyPQTc-Ncf5cnk",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/mongodb_old_db_sec"
      }
    },
    "ZgTPyHncKKwL6qLiAOKz_$$kUZWyGTFAPL8rVDhVsW0Y" : {
      "id" : "ZgTPyHncKKwL6qLiAOKz_$$kUZWyGTFAPL8rVDhVsW0Y",
      "component" : "Target",
      "metadata" : {
        "label" : "mongodb_old_config_1",
        "slug" : "mongodb_old_config_1",
        "x" : -940,
        "y" : -640,
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false,
        "isImported" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "_3l2-ARW4sQP8R-zq6AuP$$E3BQEqHt2GnF-Zx2NLBiy",
          "slug" : "in"
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ],
        "isCustomOutputSchema" : false,
        "autoUpdateOnRun" : false
      },
      "properties" : {
        "datasetId" : "datasets/mongodb_old_config"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ],
    "isCustomOutputSchema" : false,
    "autoUpdateOnRun" : false
  },
  "diagnostics" : [ {
    "property" : "$.workflow.processes.xVua3Ohhjqs11Q4b6-ad1$$BqQmhtAnyWqKxk13FltL2.properties.secretPassword",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Storing plain-text passwords poses a security risk and is not recommended. Please see https://docs.prophecy.io/low-code-spark/best-practices/use-dbx-secrets for suggested alternatives",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.qJiIX2vF1gTIeh3cwnXqY$$yGziEe3rlnmu4IDMPzxLs",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Please connect input port in",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.HSa5v4o5Kq9fRAz1k2SEs$$royi8Zlk0a9Xv4-3N-yjy.properties.secretPassword",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Password field cannot be empty [Location]",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.HSa5v4o5Kq9fRAz1k2SEs$$royi8Zlk0a9Xv4-3N-yjy.properties.secretUsername",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Username field cannot be empty [Location]",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.o2uRfAA3HGff8dTVsV9vc$$sLQFpLBsXsoH_--GeoEc1",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Please connect input port in",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.o2uRfAA3HGff8dTVsV9vc$$sLQFpLBsXsoH_--GeoEc1.properties.secretPassword",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 1,
    "message" : "Storing plain-text passwords poses a security risk and is not recommended. Please see https://docs.prophecy.io/low-code-spark/best-practices/use-dbx-secrets for suggested alternatives",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.Zi0wFu-u0_AetDE1pj980$$spfqdQ3vrV-bO9WMlIMaR.properties.dataset.schema",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 2,
    "message" : "Missing Schema. Please infer schema or provide it manually.",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.ZgTPyHncKKwL6qLiAOKz_$$kUZWyGTFAPL8rVDhVsW0Y",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 2,
    "message" : "One of the upstream gems is broken. Please, fix it first.",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.ZgTPyHncKKwL6qLiAOKz_$$kUZWyGTFAPL8rVDhVsW0Y.properties.secretPassword",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 2,
    "message" : "Password field cannot be empty [Location]",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  }, {
    "property" : "$.workflow.processes.ZgTPyHncKKwL6qLiAOKz_$$kUZWyGTFAPL8rVDhVsW0Y.properties.secretUsername",
    "range" : {
      "start" : {
        "line" : 0,
        "character" : 0
      },
      "end" : {
        "line" : 0,
        "character" : 0
      }
    },
    "severity" : 2,
    "message" : "Username field cannot be empty [Location]",
    "tags" : [ ],
    "relatedInformation" : [ ],
    "diagnosticType" : 1
  } ]
}